{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/FilterButton.js","components/Footer.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","todoInput","useRef","current","focus","className","autoComplete","onSubmit","e","preventDefault","id","Date","getTime","toString","name","complete","type","ref","required","placeholder","onChange","target","toLowerCase","FilterButton","aria-pressed","isPressed","onClick","setFilter","Footer","filterList","ItemLeft","filter","todo","length","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","List","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","dragAndDrop","setDragAndDrop","onDragStart","event","initialPosition","Number","currentTarget","dataset","position","onDragOver","newTodo","itemDragged","remainingItems","item","index","slice","onDrop","onDragLeave","changeIndex","newTodos","newIndex","newcomplete","splice","indexOf","newInComplete","map","data-position","draggable","htmlFor","checked","checkComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16a2b7bd.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const todoStore = JSON.parse(localStorage.getItem('todoStore'));\r\n    if (todoStore) setTodos(todoStore);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todoStore', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <DataContext.Provider value={[todos, setTodos]}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport { DataContext } from './DataProvider';\r\nimport { IoIosAdd } from 'react-icons/io';\r\n\r\nexport default function FormInput() {\r\n  const [todos, setTodos] = useContext(DataContext);\r\n  const [todoName, setTodoName] = useState('');\r\n  const todoInput = useRef();\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      { id: new Date().getTime().toString(), name: todoName, complete: false },\r\n      ...todos,\r\n    ]);\r\n    setTodoName('');\r\n    todoInput.current.focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    todoInput.current.focus();\r\n  }, []);\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>TODO</h1>\r\n      <form autoComplete=\"off\" onSubmit={addTodo}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"todos\"\r\n          id=\"todos\"\r\n          ref={todoInput}\r\n          required\r\n          placeholder=\"Create a new todo...\"\r\n          value={todoName}\r\n          onChange={(e) => setTodoName(e.target.value.toLowerCase())}\r\n        />\r\n\r\n        <button type=\"submit\" className={todoName ? '' : 'disabled'}>\r\n          <IoIosAdd className=\"add\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span>{props.name}</span>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { DataContext } from './DataProvider';\r\n\r\nexport default function Footer({ filterList }) {\r\n  const [todos, setTodos] = useContext(DataContext);\r\n\r\n  const ItemLeft = () => {\r\n    return todos.filter((todo) => !todo.complete);\r\n  };\r\n  const completeItem = () => {\r\n    return todos.filter((todo) => todo.complete);\r\n  };\r\n  // const activeItem = () => {\r\n  //   if (todos) {\r\n  //     const newTodo = todos.filter((todo) => todo.complete === false);\r\n  //     return setTodos(newTodo);\r\n  //   } else {\r\n  //     setTodos(todos);\r\n  //   }\r\n  // };\r\n  // const completeItem = () => {\r\n  //   const newTodo = todos.filter((todo) => todo.complete === true);\r\n  //   return setTodos(newTodo);\r\n  // };\r\n  // const allItem = () => {\r\n  //   const newTodos = [...todos];\r\n  //   newTodos.filter((todo) => {\r\n  //     if (todo.complete) {\r\n  //       todo.complete = !todo.complete;\r\n  //     }\r\n  //     return todo;\r\n  //   });\r\n  //   setTodos(newTodos);\r\n  // };\r\n\r\n  const deleteTodo = () => {\r\n    setTodos(ItemLeft());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"footer\">\r\n        <div className=\"item\">\r\n          <p className=\"item-left\"> {ItemLeft().length} items left</p>\r\n          <p className=\"item-complete\"> {completeItem().length} complete</p>\r\n        </div>\r\n\r\n        <div className=\"items\">{filterList}</div>\r\n\r\n        <button onClick={deleteTodo} className=\"delete \">\r\n          Clear Completed\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { DataContext } from './DataProvider';\r\nimport FilterButton from './FilterButton';\r\nimport Footer from './Footer';\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (todo) => !todo.complete,\r\n  Completed: (todo) => todo.complete,\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nexport default function List() {\r\n  const [todos, setTodos] = useContext(DataContext);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  const initialDnDState = {\r\n    draggedFrom: null,\r\n    draggedTo: null,\r\n    isDragging: false,\r\n    originalOrder: [],\r\n    updatedOrder: [],\r\n  };\r\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\r\n  const onDragStart = (event) => {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: todos,\r\n    });\r\n  };\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    let newTodo = dragAndDrop.originalOrder;\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n    const itemDragged = newTodo[draggedFrom];\r\n    const remainingItems = newTodo.filter(\r\n      (item, index) => index !== draggedFrom\r\n    );\r\n\r\n    newTodo = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo),\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newTodo,\r\n        draggedTo: draggedTo,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    setTodos(dragAndDrop.updatedOrder);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false,\r\n    });\r\n  };\r\n\r\n  const onDragLeave = () => {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null,\r\n    });\r\n  };\r\n\r\n  const checkComplete = (id) => {\r\n    const newTodos = [...todos];\r\n\r\n    newTodos.filter((todo) => {\r\n      if (todo.id === id) {\r\n        todo.complete = !todo.complete;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(newTodos);\r\n  };\r\n  const changeIndex = () => {\r\n    const newTodos = [...todos];\r\n    const newIndex = newTodos.length - 1;\r\n    newTodos.filter((todo) => {\r\n      if (todo.complete === true) {\r\n        const newcomplete = newTodos.splice(newTodos.indexOf(todo), 1);\r\n        const newInComplete = newTodos.splice(todo, newIndex);\r\n        const newTodo = [...newInComplete, ...newcomplete];\r\n\r\n        return setTodos(newTodo);\r\n      }\r\n      return todo;\r\n    });\r\n    // setDragAndDrop(todos);\r\n  };\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <ul className=\"todoLists\">\r\n          {todos.filter(FILTER_MAP[filter]).map((todo, index) => (\r\n            <li\r\n              key={index}\r\n              data-position={index}\r\n              draggable\r\n              onDragStart={onDragStart}\r\n              onDragOver={onDragOver}\r\n              onDrop={onDrop}\r\n              onDragLeave={onDragLeave}\r\n              onChange={changeIndex}\r\n              complete={todo.complete}\r\n            >\r\n              <label htmlFor=\"todo\" className={todo.complete ? 'active' : ''}>\r\n                {todo.name}\r\n              </label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.complete}\r\n                className=\"checkbox\"\r\n                onChange={() => checkComplete(todo.id)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <Footer filterList={filterList} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport FormInput from './components/FormInput';\nimport List from './components/List';\n// import Footer from './components/Footer';\nimport { DataProvider } from './components/DataProvider';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <DataProvider>\n      <div className=\"header\">\n        <FormInput />\n      </div>\n\n      <List />\n    </DataProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}